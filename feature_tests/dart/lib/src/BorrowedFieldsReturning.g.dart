// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

final class _BorrowedFieldsReturningFfi extends ffi.Struct {
  external _SliceUtf8 bytes;
}

final class BorrowedFieldsReturning {
  String _bytes;

  BorrowedFieldsReturning._(this._bytes,);


  factory BorrowedFieldsReturning._fromFfi(_BorrowedFieldsReturningFfi ffi){

    var _underlying = ffi;
    var _bytes = Utf8Decoder().convert(_underlying.bytes._pointer.asTypedList(_underlying.bytes._length));
    return BorrowedFieldsReturning._(_bytes, );
  }

  _BorrowedFieldsReturningFfi _toFfi() {
    var _underlying;
    ffi2.calloc.free(_underlying.bytes._pointer);;
    final bytesView = bytes.utf8View;;
    _underlying.bytes._pointer = bytesView.pointer(ffi2.calloc);;
    _underlying.bytes._length = bytesView.length;;
    return _underlying;
  }

  String get bytes => this._bytes;
  set bytes(String bytes) {
    _bytes = bytes;
  }

  @override
  bool operator ==(Object other) =>
      other is BorrowedFieldsReturning &&
      other.bytes == this.bytes;

  @override
  int get hashCode => Object.hashAll([
        this.bytes,
      ]);
}
