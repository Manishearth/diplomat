// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

final class _ErrorStructFfi extends ffi.Struct {
  @ffi.Int32()
  external int i;
  @ffi.Int32()
  external int j;
}

final class ErrorStruct {
  int _i;
  int _j;

  ErrorStruct._(this._i,this._j,);


  factory ErrorStruct._fromFfi(_ErrorStructFfi ffi){

    var _underlying = ffi;
    var _i = _underlying.i;
    var _j = _underlying.j;
    return ErrorStruct._(_i, _j, );
  }

  _ErrorStructFfi _toFfi() {
    var _underlying;
    _underlying.i = i;;
    _underlying.j = j;;
    return _underlying;
  }

  int get i => this._i;
  set i(int i) {
    _i = i;
  }

  int get j => this._j;
  set j(int j) {
    _j = j;
  }

  @override
  bool operator ==(Object other) =>
      other is ErrorStruct &&
      other.i == this.i &&
      other.j == this.j;

  @override
  int get hashCode => Object.hashAll([
        this.i,
        this.j,
      ]);
}
